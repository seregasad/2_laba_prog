version: "3.9"
name: elite-stack
services:
  traefik:
    image: traefik:v3.1
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports: ["80:80"]
    networks: [public]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik.service=api@internal

  api:
    build: .
    env_file: .env
    depends_on:
      postgres: {condition: service_healthy}
      redis: {condition: service_started}
    networks: [public, backend]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  worker:
    build: .
    command: celery -A app.celery_app worker -l info
    env_file: .env
    depends_on:
      rabbitmq: {condition: service_healthy}
      redis: {condition: service_started}
    networks: [backend]

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: appdb
    healthcheck: { test: ["CMD-SHELL","pg_isready -U app"], interval: 5s, timeout: 3s, retries: 10 }
    volumes: [pgdata:/var/lib/postgresql/data]
    networks: [backend]

  redis:
    image: redis:7-alpine
    networks: [backend]

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck: { test: ["CMD","rabbitmq-diagnostics","ping"], interval: 5s, timeout: 3s, retries: 10 }
    ports: ["15672:15672"] # mgmt UI
    networks: [backend]

  adminer:
    image: adminer:latest
    networks: [public, backend]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=elite-stack_public" # <--- ВОТ ОНО, РЕШЕНИЕ
      - "traefik.http.routers.adminer.rule=Host(`adminer.localhost`)"
      - "traefik.http.routers.adminer.entrypoints=web"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"

volumes:
  pgdata:

networks:
  public:
  backend:
    internal: true

